BasicToDo = Benchmark (
    | problemSize points |
    
    oneTimeSetup = (
    	points := Vector new: self problemSize.
    	1 to: self problemSize do: [:index | 
    		points at: index put: Point new.
    	].
    	self benchmark.
    	self iterationOne.
    )
    
    benchmark = (
    	| accumulator |
    	accumulator := 0.
    	points collect: [:point | point x + point hash].
    	points collect: [:point | point y + (point isNil ifTrue: [0] ifFalse: [1])].
    	points collect: [:point | point x + point value y].
    	points collect: [:point | accumulator := accumulator + point y].
    	points collect: [:point | accumulator := accumulator + point x].
    	points collect: [:point | point x].
    	points collect: [:point | point y].
    	^accumulator
    )
    
    iterationOne = ()
    
    verifyResult: result = (
    	^self assert: result equals: (self problemSize * 2)
    )
    
    problemSize = (^100)
    problemSize: aNumber = (problemSize := aNumber)
)    
