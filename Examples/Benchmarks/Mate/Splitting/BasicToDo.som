BasicToDo = Benchmark (
    | problemSize points points2 |
    
    oneTimeSetup = (
    	| shape |
    	points := Vector new: self problemSize.
    	points2 := Vector new: self problemSize.
    	1 to: self problemSize do: [:index | 
    		points at: index put: Point new.
    		points2 at: index put: Point new
    	].
    	self benchmark.
    	self iterationOne.
    )
    
    benchmark = (
    	| accumulator xs ys rs |
    	accumulator := 0.
    	xs := points collect: [:point | point x].
    	ys := points2 collect: [:point | point y].
    	xs do: [:x | accumulator := accumulator + x].
    	ys do: [:y | accumulator := accumulator + y].
    	^accumulator
    )
    
    iterationOne = ()
    
    verifyResult: result = (
    	^self assert: result equals: self problemSize * 2
    )
    
    problemSize = (^1000)
    problemSize: aNumber = (problemSize := aNumber)
)    
