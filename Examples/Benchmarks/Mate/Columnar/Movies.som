Movies = Benchmark (
    | ratings |
    
    oneTimeSetup = (
    	UnixStore initialize.
    	ratings := Vector new.
    	self loadMovies2.
    )
    
    benchmark = (
		| mean |
		mean := 0.
		ratings do: [:rating | mean := mean + rating rating].
		mean := mean // self count.
		^mean.
    )
    
    verifyResult: result = (
     	1 = 1 ifTrue: [^true].
     	self count = 10000 ifTrue:[^result = 3.6303].
     	self count = 50000 ifTrue:[^result = 3.62896].
     	self count = 100000 ifTrue:[^result = 3.56631].
     	result println.
     	^false.
    )
    
    loadMovies = (
    	| i file stream ratingForMovie rating |
    	file := FileSystem * 'core-lib/Examples/Benchmarks/Mate/Columnar/MovieLens/ratings.dat'.
    	stream := file readStream.
    	i := 0.
    	[stream atEnd or: [i >= self count]] whileFalse: [
    		ratingForMovie := self delimitor split: (stream nextLine asString).
    		ratingForMovie size = 4 ifTrue: [
	    		rating := Rating new.
	    		rating movie: (ratingForMovie at: self movieIndex).
	    		rating rating: (ratingForMovie at: self ratingIndex) asInteger.
	    		ratings append: rating.
	    		i := i + 1.
	    	]
    	]
    )
    
    loadMovies2 = (
	    | i file stream ratingForMovie rating |
    	i := 0.
    	[i >= self count] whileFalse: [
			rating := Rating new.
    		rating movie: 1.
    		rating rating: 4.
    		ratings append: rating.
    		i := i + 1.
    	]
    )
    
    delimitor = (^'::')
    movieIndex = (^2)
    ratingIndex = (^3)
    count = (^1)
)    
