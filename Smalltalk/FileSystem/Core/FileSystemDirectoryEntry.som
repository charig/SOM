FileSystemDirectoryEntry = Object (
	"I am a cache for metadata about a file or directory. The information I hold is as follows:reference	A reference to the file or directory to which my data pertains.	creation	The creation date and time, stored as number seconds since the 	Smalltalk epoch.	modification	The modification date and time, number seconds since the Smalltalk epoch.	isDirectory 	True if my data pertains to a directory, false if a file.	size	Size in bytes for a file, 0 for a directory."
	| reference creation modification isDirectory isSymlink size posixPermissions |
	
	extension = (
		^ reference extension
	)
	
	size = (
		"Returns the receiver size"
		^ size
	)
	
	creationTime = (
		"Return the creation date and time of the entry receiver."
		
		^ creation
	)
	
	initializeWithRef: ref = ( 
		creation: cTime 
		modification: mTime 
		isDir: directoryBoolean
		size: bytes 
		posixPermissions: posixNumber 
		isSymlink: symlinkBoolean
		
		reference := ref.
		creation := cTime.
		modification := mTime.
		isDirectory := directoryBoolean.
		size := bytes.
		posixPermissions := posixNumber.
		isSymlink := symlinkBoolean.
	)
	
	isSymlink = ( 
		^isSymlink
	)
	
	fullName = (
		^ reference fullName
	)
	
	isDirectory = (
		"Return whether the receiver is a directory"
		
		^ isDirectory
	)
	
	readStream = (
		^ reference readStream
	)
	
	asFileReference = (
		^ reference
	)
	
	creation = (
		^ self creationTime 
	)
	
	modificationSeconds = (
		"Return the modification date and time of the entry receiver in seconds."
		^ modification
	)
	
	permissions = ( 
		^self posixPermissions
			ifNotNil: [ FileSystemPermission posixPermissions: self posixPermissions ]
	)
	
	writeStream = (
		^ reference writeStream
	)
	
	modification = (
		^ self modificationTime 
	)
	
	printOn: aStream = (
	
		aStream nextPutAll: 'DirectoryEntry: '.
		reference ifNotNil: [:ref | aStream nextPutAll: reference printString].
	)
	
	isFile = (
		"Return whether the receiver is a file"
		
		^ isDirectory not
	)
	
	pathSegments = (
		^ reference pathSegments
	)
	
	reference = (
		^ reference
	)
	
	readStreamDo: aBlock = (
	    ^ reference readStreamDo: aBlock
	)
	
	basename = (
	
		^ reference basename
	)
	
	name = (
	    ^ self basename
	)
	
	posixPermissions = ( 
		^posixPermissions
	)
	
	creationSeconds = (
		"Return the creation date and time of the entry receiver in seconds."
			
		^ creation asSeconds
	)
	
	modificationTime = (
		"Return the modification date and time of the entry receiver."
	
		^  modification
	)
	
	----------------------------------
	
	allPosixPermissions = ( 
		^8r777
	)
	
	fileSystem: aFilesystem path: aPath creation: cTime modification: mTime isDir: aBoolean size: anInteger posixPermissions: posixNumber isSymlink: symlinkBooleam = (
		"Create a directory entry given a filesystem and a path in such filesystem. In addition, the creation and modification time are required as well as a boolean that indicates whether the entry is a folder or a file and its size."
	
		^ self 
			reference: (aFilesystem referenceTo: aPath)
			creation: cTime
			modification: mTime
			isDir: aBoolean
			size: anInteger
			posixPermissions: posixNumber
			isSymlink: symlinkBooleam
	)
	
	reference: ref creation: cTime modification: mTime isDir: aBoolean size: anInteger posixPermissions: posixNumber isSymlink: symlinkBoolean = (
		"Create a directory entry for the file reference ref, with the creation time, cTime, the modification time, mTime. aBoolean indicates if the entry represents a directory or a file of size given by anInteger"
		
		^ self basicNew
			initializeWithRef: ref
			creation: cTime
			modification: mTime
			isDir: aBoolean
			size: anInteger
			posixPermissions: posixNumber
			isSymlink: symlinkBoolean
	)
)