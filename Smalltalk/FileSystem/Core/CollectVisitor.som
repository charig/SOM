CollectVisitor = AbstractEnumerationVisitor (
	"I am a visitor that collects objects from the nodes I visit. I take a block similar to those passed to Collection>>collect:. I evaluate the block with DirectoryEntries for the nodes I visit, and collect the objects answered into an array.I can use any guide, and the objects in the array I produce will reflect the order imposed by the guide."
	
	
	visitReference: anEntry = (
		out nextPut: (block value: anEntry)
	)
	
	----------------------------------
	
	preorder: aReference = (
		^ self preorder: aReference collect: [:entry | entry]
	)
	
	collect: aBlock = (
		^ self basicNew initializeWithBlock: aBlock
	)
	
	postorder: aReference = (
		^ self postorder: aReference collect: [:entry | entry]
	)
	
	breadthFirst: aReference collect: aBlock = (
		^ (self collect: aBlock) breadthFirst: aReference
	)
	
	preorder: aReference collect: aBlock = (
		^ (self collect: aBlock) preorder: aReference
	)
	
	postorder: aReference collect: aBlock = (
		^ (self collect: aBlock) postorder: aReference
	)
	
	breadthFirst: aReference = (
		^ self breadthFirst: aReference collect: [:entry | entry]
	)
)