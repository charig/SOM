SelectVisitor = AbstractEnumerationVisitor (
	"I am a visitor that selects objects from the nodes I visit. I take a block similar to those passed to Collection>>select:. I evaluate the block with DirectoryEntries for the nodes I visit.I can use any guide, and the objects in the array I produce will reflect the order imposed by the guide."
	
	
	visitReference: anEntry = (
		(block value: anEntry) 
			ifTrue: [ out nextPut: anEntry ]
	)
	
	----------------------------------
	
	postorder: aReference select: aBlock = (
		^ (self select: aBlock) postorder: aReference
	)
	
	preorder: aReference = (
		^ self preorder: aReference select: [:entry | true]
	)
	
	select: aBlock = (
		^ self basicNew initializeWithBlock: aBlock
	)
	
	breadthFirst: aReference select: aBlock = (
		^ (self select: aBlock) breadthFirst: aReference
	)
	
	postorder: aReference = (
		^ self postorder: aReference select: [:entry | true]
	)
	
	preorder: aReference select: aBlock = (
		^ (self select: aBlock) preorder: aReference
	)
	
	breadthFirst: aReference = (
		^ self breadthFirst: aReference select: [:entry | true]
	)
)