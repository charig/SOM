RBParseErrorNode = RBProgramNode (
	"I am a node representing a source code segement that could not be parsed. I am manly used for source-code coloring where we should parse as far as possible and mark the rest as a failure."
	| errorMessage value start |
	
	value = (
		^value.
	)
	
	value: aString = (
		value := aString.
	)
	
	errorMessage = (
		^ errorMessage
	)
	
	start = (
		^ start
	)
	
	start: aPosition = (
		start := aPosition
	)
	
	stop = (
		^ start + value size - 1.
	)
	
	isFaulty = (
		^true.
	)
	
	errorMessage: anObject = (
		errorMessage := anObject
	)
	
	binding: anOCTempVariable = (
	
		"only for compatibility"
		
	)
	
	acceptVisitor: aProgramNodeVisitor = (
		^ aProgramNodeVisitor visitParseErrorNode: self.
	)
	
	----------------------------------
	
	
	errorMessage: aString value: aValue at: aPosition = (
	
		^ self new
			errorMessage: aString;
			value: aValue;
			start: aPosition;
			yourself
	)
)