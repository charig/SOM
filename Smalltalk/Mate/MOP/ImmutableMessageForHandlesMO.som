ImmutableMessageForHandlesMO = MessageMO (
    find: aSymbol since: aClass = (	
		| class target |
		target := self target.
		class := target isNil ifTrue: [aClass] ifFalse: [target class].
		[class isNil or: [(class hasMethod: aSymbol)]] whileFalse: [
			class := class superclass.
		].
		class isNil ifFalse: [ ^(class methods select:[:m | m signature = aSymbol]) at: 1].
		^self doesNotUnderstand: aSymbol arguments: nil. 
	)
	
    activate: aMethod withArguments: arguments = (
		| realArguments target | 
		target := self target.
		target isNil ifTrue: [^arguments].
		realArguments := arguments copy.
		realArguments at: 1 put: Handle semantics.
		realArguments at: 3 put: target.
		^realArguments.
	)
)
