LayoutTest = TestCase (
    
	testChangeLayout = (
		| shape person person2 usedSlots |

		shape := Shape newWithFieldsCount: 6.
		self assert: 6 equals: shape fieldsCount.
		shape := shape installClass: Person.

		person := Person new.
		person ssn: 3055.
		person address: 'casa'.
		person tel: 1234.
		self assert: 3055 equals: person ssn.
		self assert: 10 equals: person class fields length .
		self assert: 10 equals: person shape fieldsCount.

		person2 := Person new.
		person2 changeShape: shape.

		1 to: 6 do: [:i | person2 instVarAt: i put: nil].
		person2 installEnvironment: self environment.
		person2 address: 'casa'.
		person2 tel: 1234.
		person2 cel: 4321.
		self assert: 1234 equals: person2 tel.
		self assert: 10 equals: person2 class fields length.
		self assert: 6 equals: person2 shape fieldsCount.

		usedSlots := 0.
		1 to: 10 do: [:index | (person2 instVarAt: index) ifNotNil: [:person | usedSlots := usedSlots + 1]].
		self assert: 3 equals: usedSlots.
		self assert: 6 equals: person2 shape fieldsCount.
    )
    
    environment = (
    	^EnvironmentMO 
			operationalSemantics: nil  
			message: nil 
			layout: HashFieldsSemanticsMO new.
	)
 )
