BasicOperationsTest = TestCase (
    "
        Message Sends/Activations are tested in ImmutabilityTest.
        Layout operations are tested in LayoutTest
    "
    | testField |

    setUp = (self class initialize)

    testLocalVarRead = (
        | localVar |
        localVar := 1.
        self assert: 1 equals: localVar.
        self installLocalsMetaobject.
        self assert: 2 equals: localVar.
        self uninstallMetaobject.
        self assert: 1 equals: localVar.
    )

    testLocalVarWrite = (
        | localVar |
        localVar := 1.
        self assert: 1 equals: localVar.
        self installLocalsMetaobject.
        localVar := 2.
        self uninstallMetaobject.
        self assert: 3 equals: localVar.
        localVar := 2.
        self assert: 2 equals: localVar.
    )

    testArgumentRead = (
        | argValue |
        argValue := self argsTest: 1.
        self assert: 1 equals: argValue.
        self installArgumentsMetaobject.
        argValue := self argsTest: 1.
        self uninstallMetaobject.
        self assert: 2 equals: argValue.
        argValue := self argsTest: 1.
        self assert: 1 equals: argValue.
    )

    testFieldRead = (
        testField := 1.
        self assert: 1 equals: testField.
        self installFieldsMetaobject.
        self assert: 2 equals: testField.
        self uninstallMetaobject.
        self assert: 1 equals: testField.
    )

    testFieldWrite = (
        testField := 1.
        self assert: 1 equals: testField.
        self installFieldsMetaobject.
        testField := 1.
        self uninstallMetaobject.
        self assert: 2 equals: testField.
    )

    testReturn = (
        | value |

        self assert: self returnTest equals: 1.
        self installEnvironment: self class returnMetaobject.
        value := self returnTest.
        self uninstallMetaobject.
        self assert: 2 equals: value.
        self assert: 1 equals: self returnTest.
    )

    testImplicitReturn = (
        | value |

        self assert: self implicitReturnTest returnTest equals: 1.
        self installEnvironment: self class implicitReturnMetaobject.
        value := self implicitReturnTest.
        self uninstallMetaobject.
        self assert: 2 equals: value.
        self assert: 1 equals: self implicitReturnTest returnTest.
    )

    testMessageLookup = (
        testField := 0.

        self installMessageLookupMetaobject.

        "Note that assert:equals: call assert:description.
        But the lookup for the assert:description within that method is done only the first time because the lookup
        share the same behavior of the lookup at vm-side, if the receiver holds the lookup caches the value.
        uninstallMetaobject sums 2 lookups"

        self assert: 1 equals: self returnTest.
        self assert: 1 equals: self returnTest.
        self assert: 1 equals: self returnTest.

        self uninstallMetaobject.
        (system inTruffle)
            ifTrue: [ self assert: 9 equals: testField ]
            ifFalse: [ self assert: 11 equals: testField ].
    )

    testMessageLookupInLoop = (
        | i |
        testField := 0.
        i := 0.

        self installMessageLookupMetaobject.

        [
            self returnTest.
            i < 1.
        ] whileTrue: [ self returnTest. i := i + 1 ].

        self uninstallMetaobject.
        (system inTruffle)
            ifTrue: [ self assert: 3 equals: testField ]
            ifFalse: [ self assert: 5 equals: testField ].
    )

    testMethodActivacion = (
        | messageMO |

        testField := 0.

        "Disimilar to the lookup, the method activation is not cached and is done always. That
        is the reason for the two extra values in the expected result (11 vs 9)"

        (system inTruffle)
            ifTrue: [ messageMO := MessageSemanticsForTestingMethodActivation new ]
            ifFalse: [ messageMO := RTM_MessageSemanticsForTestingMethodActivation new ].

        self installEnvironment: (EnvironmentMO operationalSemantics: nil message: messageMO layout: nil).

        self assert: 1 equals: self returnTest.
        self assert: 1 equals: self returnTest.
        self assert: 1 equals: self returnTest.

        self uninstallMetaobject.
        self assert: 10 equals: testField.
    )

    testLayoutRead = (
        testField := 1.
        self assert: 1 equals: testField.
        self installLayoutMetaobject.
        self assert: 2 equals: testField.
        self uninstallMetaobject.
        self assert: 1 equals: testField.
    )

    testLayoutWrite = (
        testField := 1.
        self assert: 1 equals: testField.
        self installLayoutMetaobject.
        testField := 1.
        self uninstallMetaobject.
        self assert: 2 equals: testField.
    )

    argsTest: aValue = (
        ^aValue
    )

    returnTest = (^1)
    implicitReturnTest = ()

    installLocalsMetaobject = (
        self installEnvironment: self class localMetaobject.
    )

    installArgumentsMetaobject = (
        self installEnvironment: self class argumentsMetaobject.
    )

    installFieldsMetaobject = (
        self installEnvironment: self class fieldsMetaobject.
    )

    installMessageLookupMetaobject = (
        self installEnvironment: self class messageLookupMetaobject.
    )

    installLayoutMetaobject = (
        self installEnvironment: self class layoutMetaobject.
    )

    installLayoutMetaobject = (
        self installEnvironment: self class layoutMetaobject.
    )

    uninstallMetaobject = (
        self installEnvironment: nil.
    )

    ------------------------------

    | localMetaobject argumentsMetaobject returnMetaobject fieldsMetaobject messageLookupMetaobject layoutMetaobject implicitReturnMetaobject|

    localMetaobject = (^localMetaobject)
    argumentsMetaobject = (^argumentsMetaobject)
    returnMetaobject = (^returnMetaobject)
    implicitReturnMetaobject = (^implicitReturnMetaobject)

    fieldsMetaobject = (^fieldsMetaobject)
    messageLookupMetaobject = (^messageLookupMetaobject)
    layoutMetaobject = (^layoutMetaobject)

    initialize = (
        localMetaobject := (EnvironmentMO
                operationalSemantics: OperationalSemanticsForTestingLocals new
                message: "MessageSemanticsForTest new" nil
                layout: nil).

        argumentsMetaobject := (EnvironmentMO
                operationalSemantics: OperationalSemanticsForTestingArguments new
                message: "MessageSemanticsForTest new" nil
                layout: nil).

        returnMetaobject := (EnvironmentMO
                operationalSemantics: OperationalSemanticsForTestingReturn new
                message: "MessageSemanticsForTest new" nil
                layout: nil).

        implicitReturnMetaobject := (EnvironmentMO
                operationalSemantics: OperationalSemanticsForTestingImplicitReturn new
                message: "MessageSemanticsForTest new" nil
                layout: nil).

        fieldsMetaobject := (EnvironmentMO
                operationalSemantics: OperationalSemanticsForTestingFields new
                message: "MessageSemanticsForTest new" nil
                layout: nil).

        messageLookupMetaobject := (EnvironmentMO
                operationalSemantics: nil
                message: MessageSemanticsForTestingMessageLookupMO new
                layout: nil).

        layoutMetaobject := (EnvironmentMO
                operationalSemantics: nil
                message: nil
                layout: LayoutSemanticsForTestingLayout new).
    )
 )